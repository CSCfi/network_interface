---
- name: Wait 10 secs for the effect of network restarting
  wait_for:
    timeout: 10
- name: Update facts
  setup:
- name: toggle any interface still having same ip as its bond
  shell: "nmcli device disconnect {{ item.1 }} && sleep 10 && nmcli device connect {{ item.1 }}"
  when:
    - hostvars[inventory_hostname]['ansible_' + (item.0.device | replace('-','_'))].ipv4.address is defined
    - hostvars[inventory_hostname]['ansible_' + (item.1 | replace('-','_'))].ipv4.address is defined
    - hostvars[inventory_hostname]['ansible_' + (item.0.device | replace('-','_'))].ipv4.address == hostvars[inventory_hostname]['ansible_' + (item.1 | replace('-','_'))].ipv4.address
  loop: "{{ query('subelements', network_bond_interfaces, 'bond_slaves') }}"
  register: bond_toggled

- name: toggle any interface still having same ip as its bridge
  shell: "nmcli device disconnect {{ item.1 }} && sleep 10 && nmcli device connect {{ item.1 }}"
  when:
    - bond_toggled.results | map(attribute='skipped') | list is all
    - hostvars[inventory_hostname]['ansible_' + (item.0.bridge | replace('-','_'))].ipv4.address is defined
    - hostvars[inventory_hostname]['ansible_' + (item.1 | replace('-','_'))].ipv4.address is defined
    - hostvars[inventory_hostname]['ansible_' + (item.0.bridge | replace('-','_'))].ipv4.address == hostvars[inventory_hostname]['ansible_' + (item.1 | replace('-','_'))].ipv4.address
  loop: "{{ query('subelements', network_bond_interfaces, 'bond_slaves') }}"

- name: reapply any interface with ipv4 addr to get all configurations activated
  shell: "nmcli connection up 'System {{ item }}'"
  when: ansible_facts[item].ipv4.address is defined and not 'lo' == item
  loop: "{{ ansible_interfaces }}"
...
